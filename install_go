#!/usr/bin/env python3

import os
import sys
import argparse

def loggy_run(*args, **kwargs):
    import subprocess
    stdin = kwargs.get("stdin")
    redirect = kwargs.get("stdout")
    cwd = kwargs.get("cwd")
    print("[SHELL] " +
        ("(cd " + cwd + "; " if cwd else "") +
        subprocess.list2cmdline(*args) +
        (" < " + stdin.name if stdin else "") +
        (" > " + redirect.name if redirect else "") +
        (")" if cwd else ""))
    sys.stdout.flush()
    return subprocess.check_call(*args, **kwargs)
def loggy_rm(file):
    print("rm %s" % file)
    os.remove(file)
def loggy_symlink(linktarget, linkname):
    print("symlink '%s' -> '%s'" % (linkname, linktarget))
    os.symlink(linktarget, linkname)

parser = argparse.ArgumentParser()
parser.add_argument("install_location", help="The directory to download go to")
parser.add_argument("path_dir", help="The directory in PATH to link 'go' to")
args = parser.parse_args()

if not os.path.isdir(args.path_dir):
    sys.exit("Error: path_dir '%s' does not exist" % args.path_dir)

url_path = "https://dl.google.com/go/"
tar_basename = "go1.11.linux-amd64.tar.gz"

print("install_location: %s" % args.install_location)


tar_filename = os.path.join(args.install_location, tar_basename)
if os.path.isfile(tar_filename):
   loggy_rm(tar_filename)

url = url_path + tar_basename
loggy_run(["wget", "-O", tar_filename, url])
loggy_run(["tar", "-C", args.install_location, "-xzf", tar_filename])
loggy_rm(tar_filename)

link_name = os.path.join(args.path_dir, "go")
if os.path.exists(link_name):
    loggy_rm(link_name)
loggy_symlink(os.path.join(args.install_location, "go/bin/go"),
    os.path.join(args.path_dir, "go"))
